{"ast":null,"code":"import _slicedToArray from\"/Users/muhammadshahromali/GitHub/arakhne/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import storage from\"./firebaseConfiguration\";import{ref,uploadBytesResumable,getDownloadURL}from\"firebase/storage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State to store uploaded file\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];// progress\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),percent=_useState4[0],setPercent=_useState4[1];// Handle file upload event and update state\nfunction handleChange(event){setFile(event.target.files[0]);}var handleUpload=function handleUpload(){if(!file){alert(\"Please upload an image first!\");}var storageRef=ref(storage,\"\".concat(file.name));// progress can be paused and resumed. It also exposes progress updates.\n// Receives the storage reference and the file to upload.\nvar uploadTask=uploadBytesResumable(storageRef,file);uploadTask.on(\"state_changed\",function(snapshot){var percent=Math.round(snapshot.bytesTransferred/snapshot.totalBytes*100);// update progress\nsetPercent(percent);},function(err){return console.log(err);},function(){// download url\ngetDownloadURL(uploadTask.snapshot.ref).then(function(url){console.log(url);});});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleChange,accept:\"/image/*\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,children:\"Upload to Firebase\"}),/*#__PURE__*/_jsxs(\"p\",{children:[percent,\" % done\"]})]});}export default App;","map":{"version":3,"names":["useState","storage","ref","uploadBytesResumable","getDownloadURL","App","file","setFile","percent","setPercent","handleChange","event","target","files","handleUpload","alert","storageRef","name","uploadTask","on","snapshot","Math","round","bytesTransferred","totalBytes","err","console","log","then","url"],"sources":["/Users/muhammadshahromali/GitHub/arakhne/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport storage from \"./firebaseConfiguration\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nfunction App() {\n  // State to store uploaded file\n  const [file, setFile] = useState(\"\");\n  // progress\n  const [percent, setPercent] = useState(0);\n\n  // Handle file upload event and update state\n  function handleChange(event) {\n    setFile(event.target.files[0]);\n  }\n\n  const handleUpload = () => {\n    if (!file) {\n      alert(\"Please upload an image first!\");\n    }\n\n    const storageRef = ref(storage, `${file.name}`);\n\n    // progress can be paused and resumed. It also exposes progress updates.\n    // Receives the storage reference and the file to upload.\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const percent = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\n        // update progress\n        setPercent(percent);\n      },\n      (err) => console.log(err),\n      () => {\n        // download url\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n          console.log(url);\n        });\n      }\n    );\n  };\n  return (\n    <div>\n      \n      <input type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n      <button onClick={handleUpload}>Upload to Firebase</button>\n      <p>{percent} % done</p>\n      \n    </div>\n  );\n}\nexport default App;"],"mappings":"8HAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAOC,QAAO,KAAM,yBAAyB,CAC7C,OAASC,GAAG,CAAEC,oBAAoB,CAAEC,cAAc,KAAQ,kBAAkB,CAAC,wFAE7E,QAASC,IAAG,EAAG,CACb;AACA,cAAwBL,QAAQ,CAAC,EAAE,CAAC,wCAA7BM,IAAI,eAAEC,OAAO,eACpB;AACA,eAA8BP,QAAQ,CAAC,CAAC,CAAC,yCAAlCQ,OAAO,eAAEC,UAAU,eAE1B;AACA,QAASC,aAAY,CAACC,KAAK,CAAE,CAC3BJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAChC,CAEA,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAS,CACzB,GAAI,CAACR,IAAI,CAAE,CACTS,KAAK,CAAC,+BAA+B,CAAC,CACxC,CAEA,GAAMC,WAAU,CAAGd,GAAG,CAACD,OAAO,WAAKK,IAAI,CAACW,IAAI,EAAG,CAE/C;AACA;AACA,GAAMC,WAAU,CAAGf,oBAAoB,CAACa,UAAU,CAAEV,IAAI,CAAC,CACzDY,UAAU,CAACC,EAAE,CACX,eAAe,CACf,SAACC,QAAQ,CAAK,CACZ,GAAMZ,QAAO,CAAGa,IAAI,CAACC,KAAK,CACvBF,QAAQ,CAACG,gBAAgB,CAAGH,QAAQ,CAACI,UAAU,CAAI,GAAG,CACxD,CAED;AACAf,UAAU,CAACD,OAAO,CAAC,CACrB,CAAC,CACD,SAACiB,GAAG,QAAKC,QAAO,CAACC,GAAG,CAACF,GAAG,CAAC,GACzB,UAAM,CACJ;AACArB,cAAc,CAACc,UAAU,CAACE,QAAQ,CAAClB,GAAG,CAAC,CAAC0B,IAAI,CAAC,SAACC,GAAG,CAAK,CACpDH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAClB,CAAC,CAAC,CACJ,CAAC,CACF,CACH,CAAC,CACD,mBACE,oCAEE,cAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAEnB,YAAa,CAAC,MAAM,CAAC,UAAU,EAAG,cAC/D,eAAQ,OAAO,CAAEI,YAAa,UAAC,oBAAkB,EAAS,cAC1D,qBAAIN,OAAO,CAAC,SAAO,GAAI,GAEnB,CAEV,CACA,cAAeH,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}